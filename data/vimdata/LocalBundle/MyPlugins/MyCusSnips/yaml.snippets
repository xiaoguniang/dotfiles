snippet service "docker service" b
version: '2.0'

services:
  ${1:ServiceName}:
    image: ${2:ImageName}
    container_name: $1
    hostname: $1
    tty: true
    ports:
      - "${3:8080}:${4:8080}"
    volumes:
      - ${5:host:docker}
    entrypoint: $6
endsnippet

snippet env "docker compose environment" b
environment:
  - ${1:key=value}
endsnippet

snippet mysql "mysql docker service" b
db:
  image: mysql:latest
  container_name: db
  hostname: db
  tty: true
  environment:
    - MYSQL_ROOT_PASSWORD=root
  ports:
    - "3306:3306"
endsnippet

snippet volume "docker volume setting" b
volumes:
  - ${1:host_dir}:${2:container_dir}
endsnippet

snippet entrypoint "docker entrypoint" b
entrypoint: ${1:command}
endsnippet

snippet restart "docker always restart" b
restart: always
endsnippet

snippet depend "depends on" b
depends_on: ["${1:container_name}"]
endsnippet

snippet network "same as --net" b
network_mode: "container:${1:container_name/id}"
endsnippet

snippet kservice "kubernetes services" b
apiVersion: v1
kind: Service
metadata:
  name: quorum
  labels:
    app: quorum
spec:
  # type: NodePort
  clusterIP: None
  ports:
  - port: 46656
    name: p2p
  selector:
    app: quorum
endsnippet

snippet kstatefulset "kubernetes deployment" b
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: quorum
spec:
  serviceName: quorum
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: Parallel
  updateStrategy:
    type: OnDelete
  template:
    metadata:
      labels:
        app: quorum
    spec:
      containers:
      - name: quorum
        imagePullPolicy: Always
        image: hbliu/quorum-k8s:latest
        restartPolicy: Never
        env:
        - name: NODE_PREFIX
          value: "quorum-"
endsnippet

snippet kdeployment "kubernetes deployment" b
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: quorum
spec:
  serviceName: quorum
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: Parallel
  updateStrategy:
    type: OnDelete
  template:
    metadata:
      labels:
        app: quorum
    spec:
      initContainers:
      - name: tm-gen-validator
        image: {{ .Values.image.tmImage }}
        command:
        - bash
        - "-c"
        - |
          sleep infinity
      containers:
      - name: quorum
        imagePullPolicy: Always
        image: hbliu/quorum-k8s:latest
        restartPolicy: Never
        env:
        - name: NODE_NUMBER
          value: "{{ .Values.replicaCount }}"
        - name: NODE_PREFIX
          value: "quorum-"
endsnippet

# vim:expandtab:
