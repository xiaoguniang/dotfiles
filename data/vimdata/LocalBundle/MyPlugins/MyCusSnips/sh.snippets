snippet getopt "Description" b
local OPT OPTARG OPTIND
while getopts '$1' OPT; do
	case $OPT in
		h) usage ;;
	esac
done
shift $(($OPTIND - 1))
endsnippet

snippet retry "retry until run success" b
while ! ${1:cmd}; do
	sleep ${2:5}
done
endsnippet

snippet msg "Description" b
msgSuccess()  { echo -e " \033[1;32m✔\033[0m  $@"; }
msgError()    { echo -e " \033[1;31m✖ $@ \033[0m " >&2; }
msgHint()     { echo -e " \033[1;32m➜ $@ \033[0m "; }
endsnippet

snippet todo "Google Style TODO" b
# TODO(Hongbo): $1
endsnippet

snippet cdcurrent "cd to the script directory" b
cd "$(dirname "\$0")"
endsnippet

snippet usage "shell usage function" b
usage() {
cat << EOF
Usage: $(basename \$0) $1

Options:
  -h show this help
  $2
EOF
exit 0
}
endsnippet

snippet heredoc "Here Documentation" b
cat << ${1:EOF}
${2:documentation here}
$1
endsnippet

snippet cdmerr "command error handle" b
${1:command} || {
	${2:error handle code}
}
endsnippet

snippet main "shell main function" b
main() {
	$0
}

main $@
endsnippet

snippet lineit "line iterate" b
while read l; do
	${1:echo $l}
done << EOF
$(${2:command})
EOF
$0
endsnippet

snippet getbase "get extension of filename" w
\${${1:filename}%.*}
endsnippet

snippet getext "get extension of filename" w
\${${1:filename}##*.}
endsnippet

snippet if9 "zsh if" b
if (( ${1:${+Args[-h]}} )); then
	$0
fi
endsnippet

snippet zparseopts "zsh getopt" b
zparseopts -D -E -M -A Args -- d: r h -depth:=d
endsnippet
